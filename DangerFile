gem 'plist'
require 'plist'

junit.parse "test_output/report.junit"
junit.show_skipped_tests = true
junit.report

# Warn when there is a big PR
warn("Big PR, try to keep changes smaller if you can") if git.lines_of_code > 500

# Stop skipping some manual testing
warn("Needs testing on a Phone if change is non-trivial") if git.lines_of_code > 50 && !github.pr_title.include?("ðŸ“±")

# Mainly to encourage writing up some reasoning about the PR, rather than
# just leaving a title
if github.pr_body.length < 3
  warn "Please provide a summary in the Pull Request description"
end

# Make it more obvious that a PR is a work in progress and shouldn't be merged yet.
has_wip_label = github.pr_labels.any? { |label| label.include? "WIP" }
has_wip_title = github.pr_title.include? "[WIP]"
has_dnm_label = github.pr_labels.any? { |label| label.include? "DO NOT MERGE" }
has_dnm_title = github.pr_title.include? "[DO NOT MERGE]"
if has_wip_label || has_wip_title
  warn("PR is classed as Work in Progress")
end
if has_dnm_label || has_dnm_title
  warn("At the authors request please DO NOT MERGE this PR")
end

fail "Please re-submit this PR to dev, we may have already fixed your issue." if github.branch_for_base != "dev"

xcov.report(
   scheme: 'UnitTests',
   workspace: 'SalesforceMobileSDK.xcworkspace',
   exclude_targets:'CocoaLumberjack.framework,SalesforceSDKCoreTestApp.app,SmartStoreTestApp.app,SmartSyncTestApp.app,SalesforceHybridSDKTestApp.app,SalesforceAnalyticsTestApp.app,RestAPIExplorer.app,AccountEditor.app,NoteSync.app,SmartSyncExplorerHybrid.app,SmartSyncExplorer.app,SmartSyncExplorerCommon.framework,RecentContactsTodayExtension.appex,Cordova.framework,SalesforceReact.framework'
)

message = "### Clang Static Analysis issues\n\n"
message << "File | Type | Category | Description | Line | Col |\n"
message << " --- | ---- | -------- | ----------- | ---- | --- |\n"

clang_libs = Dir["clangReport/StaticAnalyzer/*"].map { | x | x.split("/").last }
for lib in clang_libs;
  files = Dir["clangReport/StaticAnalyzer/#{lib}/#{lib}/normal/x86_64/*.plist"].map { | x | x.split("/").last }
  for file in files;
    report = Plist.parse_xml("clangReport/StaticAnalyzer/#{lib}/#{lib}/normal/x86_64/#{file}")

    absolute_file_path = report["files"][0]
    unless absolute_file_path.nil?
      file_path = absolute_file_path.split("SalesforceMobileSDK-iOS/").last
      puts "\n\npath: #{file_path}"
      if git.modified_files.include?(file_path) || git.added_files.include?(file_path)

        issues = report["diagnostics"]
        for i in 0..issues.count
          if !issues[i].nil?
            file_name = file_path.split("/").last
            description = issues[0]["description"]
            line_num = issues[0]["location"]["line"]
            message << "#{file_name} | #{issues[0]["type"]} | #{issues[0]["category"]} | #{description} | #{line_num} | #{issues[0]["location"]["col"]}"
            warn("Static Analysis: #{description}", file: file_name, line: line_num)
          end
        end
      end
    end
  end
end

# Only print Static Analysis table if there are issues
if message.length > 138
  warn("Static Analysis found an issue with one or more file you modified.  Please fix the issue.")
  markdown message
end